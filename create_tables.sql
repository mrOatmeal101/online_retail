USE online_retail; -- how to tie the query file to the existing database online_retail
GO -- signals the end of a batch in which ssms processses everything before GO as one logical chunck. 

-- made this to delete existing tables that were auto generated by SSMS from diagram.
DROP TABLE IF EXISTS sales_fact;
DROP TABLE IF EXISTS dim_product;
DROP TABLE IF EXISTS dim_customer;
DROP TABLE IF EXISTS dim_invoice;
DROP TABLE IF EXISTS dim_store;


CREATE TABLE dim_customer (
customer_key INT IDENTITY (1,1) PRIMARY KEY,
customer_id INTEGER NOT NULL
);

INSERT INTO dim_customer (customer_id)
SELECT DISTINCT customer_id
FROM stage_online_retail
WHERE customer_id IS NOT NULL;

CREATE TABLE dim_product
( 
product_key INT IDENTITY (1,1) PRIMARY KEY,
stock_code VARCHAR (50) NOT NULL,
product_description VARCHAR (255) NOT NULL
);

INSERT INTO dim_product (stock_code, product_description)
SELECT DISTINCT stock_code, description_text
FROM stage_online_retail
WHERE stock_code IS NOT NULL;

CREATE TABLE dim_invoice (
invoice_key INT IDENTITY (1,1) PRIMARY KEY,
invoice_number VARCHAR (50) NOT NULL,
invoice_date DATETIME
);

INSERT INTO dim_invoice (invoice_number, invoice_date)
SELECT DISTINCT invoice_number, invoice_date
FROM stage_online_retail
WHERE invoice_number IS NOT NULL;

CREATE TABLE dim_store (
store_key INT IDENTITY (1,1) PRIMARY KEY,
country_origin VARCHAR (255) NOT NULL
);

INSERT INTO dim_store (country_origin)
SELECT DISTINCT country
FROM stage_online_retail
WHERE invoice_number IS NOT NULL;

CREATE TABLE sales_fact
( 
id INT IDENTITY (1,1) PRIMARY KEY,

product_key INTEGER NOT NULL ,
customer_key INTEGER NOT NULL,
invoice_key INTEGER NOT NULL,
store_key INTEGER NOT NULL,

quantity INTEGER NOT NULL,
price MONEY NOT NULL,

total_revenue AS (quantity * price) PERSISTED

	CONSTRAINT fk_product FOREIGN KEY (product_key) REFERENCES dim_product(product_key) ON DELETE CASCADE,
	CONSTRAINT fk_customer FOREIGN KEY (customer_key) REFERENCES dim_customer(customer_key) ON DELETE CASCADE,
	CONSTRAINT fk_invoice FOREIGN KEY (invoice_key) REFERENCES dim_invoice(invoice_key) ON DELETE CASCADE,
	CONSTRAINT fk_store FOREIGN KEY (store_key) REFERENCES dim_store(store_key) ON DELETE CASCADE
);

INSERT INTO sales_fact (invoice_key, product_key, customer_key, store_key, quantity, price)
SELECT
    i.invoice_key,
    p.product_key,
    c.customer_key,
	st.store_key,
    s.quantity,
    s.price
FROM stage_online_retail s
JOIN dim_invoice i ON s.invoice_number = i.invoice_number AND s.invoice_date = i.invoice_date
JOIN dim_product p ON s.stock_code = p.stock_code AND s.description_text = p.product_description
JOIN dim_customer c ON s.customer_id = c.customer_id
JOIN dim_store st ON s.country = st.country_origin;